<?php/** * @link      https://github.com/demodyne/demodyne * @copyright Copyright (c) 2015-2017 Demodyne (https://www.demodyne.org) * @license   http://www.gnu.org/licenses/agpl.html GNU Affero General Public License */namespace DGIModule\Form;use Zend\Form\Form;use Zend\InputFilter\InputFilterProviderInterface;use Zend\Hydrator\ClassMethods;use DGIModule\Entity\Bug;use Zend\Mvc\I18n\Translator;use Zend\Validator\File\Size;use Zend\Validator\File\UploadFile;use Zend\Validator\NotEmpty;use Zend\Validator\StringLength;class AddEditBugForm extends Form implements InputFilterProviderInterface{    private $translator;    public function __construct(Translator $translator)    {        parent::__construct('bug-form');        $this->translator = $translator;        $this            ->setObject(new Bug())            ->setAttribute('name', 'bug')        ;        $this->setAttribute('enctype', 'multipart/form-data');        $this->setAttribute('method', 'post');        $this->setHydrator(new ClassMethods());        $this->add(array(            'name' => 'bugTitle',            'attributes' => array(                'type'  => 'text',                'class'=>'form-control text-change',                'id' => 'bugTitle',                'maxlength' => 100,            ),        ));        $this->add([            'type' => 'Zend\Form\Element\Textarea',            'name' => 'bugDescription',            'attributes' => array(                'rows' => 5,                'class'=>'form-control text-change',                'id' => 'bugDescription',                'maxlength' => 5000,                'style' => 'display:none'            ),        ]);        $this->add([            'type' => 'Zend\Form\Element\File',            'name' => 'bugImage',            'attributes' => array(                'type' => 'file',                'accept' => 'image/*',                'id' => 'bugImage'            ),        ]);    }    /**     * @return array     */    public function getInputFilterSpecification()    {        return [            'bugTitle' => [                'required' => true,                'filters'  => [                    ['name' => 'StripTags'],                    ['name' => 'StringTrim'],                ],                'validators' => [                    [                        'name'    => 'NotEmpty',                        'options' => [                            'messages' => [NotEmpty::IS_EMPTY  => $this->translator->translate("You must provide a bug subject.", 'DGIModule')]                        ],                    ],                    [                        'name'    => 'StringLength',                        'options' => [                            'encoding' => 'UTF-8',//                              'min'      => 1,                            'max'      => 100,                            'messages' => [StringLength::TOO_LONG  => $this->translator->translate("The bug subject is more than %max% characters long", 'DGIModule')]                        ],                    ],                ],            ],            'bugDescription' => [                'required' => true,                'filters' => [                    ['name' => 'StripTags',                        'options' => [                            'allowTags' => ['b', 'i', 'br', 'strong', 'blockquote', 'span', 'div', 'p', 'u']                        ]],                    ['name' => 'StringTrim'],                ],                'validators' => [                    [                        'name' => 'StringLength',                        'options' => [                            'encoding' => 'UTF-8',                            //'min' => 2,                            'max' => 5000                        ],                    ],                    [                        'name'    => 'NotEmpty',                        'options' => [                            'messages' => [NotEmpty::IS_EMPTY  => $this->translator->translate("You must provide a bug description.", 'DGIModule')]                        ],                    ],                ],            ],            'bugImage' => [                'required' => false,                'validators' => [                    [                        'name'    => 'NotEmpty',                        'options' => [                            'messages' => [NotEmpty::IS_EMPTY  => $this->translator->translate("You must provide an image file.", 'DGIModule')]                        ],                    ],                    [                        'name'    => 'Zend\Validator\File\UploadFile',                        'options' => [                            'messages' => [                                UploadFile::NO_FILE  => $this->translator->translate("The bug image was not uploaded", 'DGIModule'),                            ]                        ],                    ],                    [                        'name'    => 'Zend\Validator\File\Size',                        'options' => [                            'max'      => 1048576, // 1MB                            'messages' => [                                Size::TOO_BIG  => $this->translator->translate("Maximum allowed size for file is '%max%' but '%size%' detected", 'DGIModule'),                                Size::NOT_FOUND  => $this->translator->translate("File is not readable or does not exist", 'DGIModule'),                            ]                        ],                    ],                ],            ]        ];    }}