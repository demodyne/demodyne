<?php/** * @link      https://github.com/demodyne/demodyne * @copyright Copyright (c) 2015-2017 Demodyne (https://www.demodyne.org) * @license   http://www.gnu.org/licenses/agpl.html GNU Affero General Public License */namespace DGIModule\Form;use Zend\Form\Form;use Zend\Hydrator\ClassMethods;use Zend\InputFilter\InputFilterProviderInterface;/** * Form for sending a new message to other users inbox * @author DragosDobre * */class NewMessageForm extends Form implements InputFilterProviderInterface{    public function __construct()    {        parent::__construct('newMessageForm');        $this->setAttribute('method', 'post');        $this->setHydrator(new ClassMethods());        $this->setAttribute('class', 'form-horizontal');        $this->add(array(            'name' => 'msgTo',            'attributes' => array(                'type'  => 'text',                'required' => 'required',                'class'=>'form-control text-change',                'id' => 'msgTo',                'maxlength' => 100,                'size' => 50,            ),        ));        $this->add(array(            'name' => 'msgTitle',            'attributes' => array(                'type'  => 'text',                'required' => 'required',                'class'=>'form-control text-change',                'id' => 'msgTitle',                'maxlength' => 50,                'size' => 50,            ),        ));        $this->add([            'type' => 'Zend\Form\Element\Textarea',            'name' => 'msgText',            'attributes' => array(                'rows' => 8,                'class'=>'form-control text-change',                'id' => 'msgText',                'style' => 'display:none'            ),        ]);    }    public function getInputFilterSpecification()    {        return [            'msgTo'=> [                'required' => true,                'filters'  => array(                    array('name' => 'StripTags'),                    array('name' => 'StringTrim'),                ),                'validators' => array(                    array(                        'name'    => 'StringLength',                        'options' => array(                            'encoding' => 'UTF-8',                            'min'      => 1,                            'max'      => 100,                        ),                    ),                ),            ],            'msgTitle' => [                'required' => true,                'filters'  => array(                    array('name' => 'StripTags'),                    array('name' => 'StringTrim'),                ),                'validators' => array(                    array(                        'name'    => 'StringLength',                        'options' => array(                            'encoding' => 'UTF-8',                            'min'      => 1,                            'max'      => 50,                        ),                    ),                ),            ],            'msgText' => [                'required' => true,                'filters'  => array(                    array('name' => 'StripTags',                        'options' => [                            'allowTags' => ['b', 'i', 'br', 'strong', 'blockquote', 'span', 'div', 'p', 'u']                        ]),                    array('name' => 'StringTrim'),                ),                'validators' => array(                    array(                        'name'    => 'StringLength',                        'options' => array(                            'encoding' => 'UTF-8',// 		                'min'      => 1,                            'max'      => 10000,                        ),                    ),                ),            ]        ];    }}