<?php/** * @link      https://github.com/demodyne/demodyne * @copyright Copyright (c) 2015-2017 Demodyne (https://www.demodyne.org) * @license   http://www.gnu.org/licenses/agpl.html GNU Affero General Public License */namespace DGIModule\Form;use DGIModule\Entity\Country;use DGIModule\Entity\Region;use Doctrine\ORM\EntityManager;use Zend\Form\Form;use Zend\Hydrator\ClassMethods;use Zend\InputFilter\InputFilterProviderInterface;class BrowseLevelForm extends Form  implements InputFilterProviderInterface{        private $entityManager;        public function __construct(EntityManager $entityManager)    {        parent::__construct('browse-level-form');             $this->entityManager = $entityManager;                $this->setAttribute('method', 'post');        $this->setHydrator(new ClassMethods());        $this->setAttribute('class', 'form-horizontal');                $this->add([            'type' => 'DoctrineModule\Form\Element\ObjectSelect',            'name' => 'country',            'value' => 73,            'attributes' => array(                'required' => true,                'class'=>'form-control text-change',                'id' => 'browse-country'            ),            'options' => [                'object_manager' => $entityManager,                'target_class' => '\DGIModule\Entity\Country',                'label_generator' => function (Country $country) {                    return $country->getCountryName();                },                'is_method' => true,                'required' => false,                'find_method' => array(                    'name' => 'getAllCountries',                    'params' => array(                        'criteria' => array(),                    ),                ),            ]        ]);                $country = $entityManager->getRepository('DGIModule\Entity\Country')->findOneBy(['countryId' => 73]);;                $this->add([            'type' => 'DoctrineModule\Form\Element\ObjectSelect',            'name' => 'region',            'value' => 73,            'attributes' => array(                'required' => true,                'class'=>'form-control text-change',                'id' => 'browse-region'            ),            'options' => [                'object_manager' => $entityManager,                'target_class' => '\DGIModule\Entity\Region',                'label_generator' => function (Region $region) {                return $region->getRegionName();                },                'is_method' => true,                'required' => false,                'find_method' => array(                    'name' => 'getAllRegions',                    'params' => array(                        'country' =>  $country                    ),                ),            ]        ]);        		$this->add(array(		    'name' => 'search',		    'attributes' => array(		        'type'  => 'text',		        'required' => 'required',		        'class'=>'form-control text-change',		        'id' => 'browse-search',		        'size' => 10,		    ),		));		    }    public function getInputFilterSpecification()    {        return array(            'country' => [    		    'required' => true,		    ],            'region' => [                'required' => false,            ],	        'search' => [    		    'required' => false,    		    'filters' => array(    		        array('name' => 'StripTags'),    		        array('name' => 'StringTrim'),    		    ),    		    'validators' => array(    		        array(    		            'name' => 'StringLength',    		            'options' => array(    		                'encoding' => 'UTF-8',    		                'min' => 2,    		            ),    		        ),    		    ),            ],        );    } }