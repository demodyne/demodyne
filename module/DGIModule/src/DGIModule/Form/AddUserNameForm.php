<?php/** * @link      https://github.com/demodyne/demodyne * @copyright Copyright (c) 2015-2017 Demodyne (https://www.demodyne.org) * @license   http://www.gnu.org/licenses/agpl.html GNU Affero General Public License */namespace DGIModule\Form;use Zend\Form\Form;use Zend\Mvc\I18n\Translator;use Zend\Hydrator\ClassMethods;use Zend\InputFilter\InputFilterProviderInterface;use Zend\Validator\Digits;use Zend\Validator\NotEmpty;class AddUserNameForm extends Form  implements InputFilterProviderInterface{    private $translator;        public function __construct(Translator $translator)    {        parent::__construct('add-user-name-form');        $this->translator = $translator;        $this->setAttribute('method', 'post');        $this->setHydrator(new ClassMethods());        $this->setAttribute('class', 'form-horizontal');                $this->add(array(            'name' => 'usrFirstname',            'attributes' => array(                'type'  => 'text',                'required' => 'required',                'class'=>'form-control text-change',                'id' => 'firstname',                'maxlength' => 50,                'size' => 50,            ),        ));        $this->add(array(            'name' => 'usrLastname',            'attributes' => array(                'type'  => 'text',                'required' => 'required',                'class'=>'form-control text-change',                'id' => 'lastname',                'maxlength' => 50,            ),        ));                $this->add(array(            'name' => 'usrBirthday',            'type'  => 'Zend\Form\Element\Select',            'attributes' => [                'id' => 'birthyear',                'class'=>'form-control text-change',            ]        ));                $this->add(array(            'type' => 'Zend\Form\Element\Checkbox',            'name' => 'agreeterms',            'options' => array(                'use_hidden_element' => true,                'checked_value' => 1,                'unchecked_value' => 'no'            ),        ));    }    public function getInputFilterSpecification()    {        return array(            'usrFirstname' => [    		    'required' => true,    		    'filters' => array(    		        array('name' => 'StripTags'),    		        array('name' => 'StringTrim'),    		    ),    		    'validators' => array(    		        array(    		            'name'    => 'NotEmpty',    		            'options' => array(    		                'messages' => array(NotEmpty::IS_EMPTY  => $this->translator->translate('Please write your firstname.', 'DGIModule'))    		            ),    		        ),    		        array(    		            'name' => 'StringLength',    		            'options' => array(    		                'encoding' => 'UTF-8',    		                'min' => 2,    		                'max' => 50    		            ),    		        ),    		    ),    		],            'usrLastname' => [    		    'required' => true,    		    'filters' => array(    		        array('name' => 'StripTags'),    		        array('name' => 'StringTrim'),    		    ),    		    'validators' => array(    		        array(    		            'name' => 'StringLength',    		            'options' => array(    		                'encoding' => 'UTF-8',    		                'min' => 2,    		                'max' => 50    		            ),    		        ),    		    ),		    ],            'usrBirthday' => [                'required' => false            ],            'agreeterms' => [                'validators' => array(                    array(                        'name' => 'Digits',                        'break_chain_on_failure' => true,                        'options' => array(                            'messages' => array(                                Digits::NOT_DIGITS => $this->translator->translate('You must agree to the terms of use.', 'DGIModule'),                            ),                        ),                    ),                ),            ]        );    } }