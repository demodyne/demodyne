<?php/** * @link      https://github.com/demodyne/demodyne * @copyright Copyright (c) 2015-2017 Demodyne (https://www.demodyne.org) * @license   http://www.gnu.org/licenses/agpl.html GNU Affero General Public License */namespace DGIModule\Form;use Zend\Form\Form;use Zend\InputFilter\InputFilterProviderInterface;use Zend\Hydrator\ClassMethods;use DGIModule\Entity\Report;use Zend\Mvc\I18n\Translator;use Zend\Validator\NotEmpty;use Zend\Validator\StringLength;class AddReportForm extends Form implements InputFilterProviderInterface{    private $translator;    public function __construct(Translator $translator)    {        parent::__construct('report-form');        $this->translator = $translator;        $this            ->setObject(new Report())            ->setAttribute('id', 'report-add-report-form')        ;        $this->setAttribute('method', 'post');        $this->setHydrator(new ClassMethods());        $this->add(array(            'name' => 'repReason',            'attributes' => array(                'type'  => 'text',                'class'=>'form-control text-change',                'id' => 'repReason',                'maxlength' => 300,            ),        ));        $this->add([            'type' => 'Zend\Form\Element\Textarea',            'name' => 'repDescription',            'attributes' => array(                'rows' => 5,                'class'=>'form-control text-change',                'id' => 'repDescription',                'maxlength' => 5000,            ),        ]);    }    /**     * @return array     */    public function getInputFilterSpecification()    {        return array(            'repReason' => array(                'required' => true,                'filters'  => array(                    array('name' => 'StripTags'),                    array('name' => 'StringTrim'),                ),                'validators' => array(                    array(                        'name'    => 'NotEmpty',                        'options' => array(                            'messages' => array(NotEmpty::IS_EMPTY  => $this->translator->translate("You must provide the reason for the report", 'DGIModule'))                        ),                    ),                    array(                        'name'    => 'StringLength',                        'options' => array(                            'encoding' => 'UTF-8',                            'max'      => 300,                            'messages' => array(StringLength::TOO_LONG  => $this->translator->translate("The reason is more than %max% characters long", 'DGIModule'))                        ),                    ),                ),            ),            'repDescription' => array(                'required' => true,                'filters' => array(                    array('name' => 'StripTags'),                    array('name' => 'StringTrim'),                ),                'validators' => array(                    array(                        'name' => 'StringLength',                        'options' => array(                            'encoding' => 'UTF-8',                            'max' => 5000                        ),                    ),                    array(                        'name'    => 'NotEmpty',                        'options' => array(                            'messages' => array(NotEmpty::IS_EMPTY  => $this->translator->translate("You must provide a description for the report", 'DGIModule'))                        ),                    ),                ),            ),        );    }}