<?php/** * @link      https://github.com/demodyne/demodyne * @copyright Copyright (c) 2015-2017 Demodyne (https://www.demodyne.org) * @license   http://www.gnu.org/licenses/agpl.html GNU Affero General Public License */namespace DGIModule\Controller;use Easybook\Slugger;use Zend\Filter\File\Rename;use Zend\Mvc\Controller\AbstractActionController;use Zend\View\Model\ViewModel;use Zend\Session\Container;use DGIModule\Entity\Article;use DGIModule\Form\AddEditArticleForm;use Ramsey\Uuid\Uuid;use Doctrine\ORM\EntityManager;use Zend\Mvc\I18n\Translator;class BlogController extends AbstractActionController{    protected $entityManager;    protected $translator;    protected $config;    public function __construct(        array $config,        EntityManager $entityManager,        Translator $translator    )    {        $this->config = $config;        $this->entityManager = $entityManager;        $this->translator = $translator;    }        public function articlesAction()    {        $user = $this->identity();        unset($_SESSION['level']);        if ($user) {            $session = new Container('level');            $session->city = $user->getCity()->getCityId();        }        $countryCode = $this->params()->fromRoute('country', $user?$user->getCountry()->getCountryCode():'FR');        $countries = $this->entityManager->getRepository('DGIModule\Entity\Country')->getAllCountries();        $country = $this->entityManager->getRepository('DGIModule\Entity\Country')->getCountryByCode($countryCode);        $searchTerms = $this->params()->fromPost('searchTerms', null);        $viewModel = new ViewModel();        $publishedArticles = $this->forward()->dispatch('DGIModule\Controller\Blog', array('action' => 'list', 'country' => $countryCode));        $viewModel->addChild($publishedArticles, 'publishedArticles');        if ($user && $user->getUsrlId()==$this->config['demodyne']['account']['type']['admin']) {            $draftArticles = $this->forward()->dispatch('DGIModule\Controller\Blog', array('action' => 'list-draft', 'country' => $countryCode));            $viewModel->addChild($draftArticles, 'draftArticles');        }        $viewModel->setTerminal($this->getRequest()->isXmlHttpRequest());        if (isset($_SESSION['mobile']) && $_SESSION['mobile']) {            $viewModel->setTemplate('dgi-module/blog/articles.mobile.phtml');        }        $viewModel->setVariables([            'user' => $user,            'countries' => $countries,            'selectedCountry' => $country,            'searchTerms' => $searchTerms,            'countryCode' =>$countryCode,        ]);        return $viewModel;    }    public function addArticleAction() {        $user = $this->identity();        if (!$user || $user->getUsrlId()!=$this->config['demodyne']['account']['type']['admin']) {            return $this->forward()->dispatch('DGIModule\Controller\Error', array('action' => 'access-denied'));        }        $publish = $this->params()->fromRoute('publish', false);        $countryId = $this->params()->fromRoute('country', $user?$user->getCountry()->getCountryId():73);        /** @var \DGIModule\Entity\Country $country */        $country = $this->entityManager->getRepository('DGIModule\Entity\Country')->findOneBy(['countryId' => $countryId]);        $user->setCountry($country);        $article = new Article();        $form = new AddEditArticleForm($this->config, $this->translator);        $form->setAttribute('action', $this->url()->fromRoute('blog', array('action'=>'add-article')));        $request = $this->getRequest();        if ($request->isPost()) {            $post = array_merge_recursive(                $request->getPost()->toArray(),                $request->getFiles()->toArray()            );            $form->bind($article);            $form->setData($post);            //verify if picture change            $picture = $post["picture-file"]["name"];            if ($form->isValid()) {                if ($picture != "") {                    $files = $request->getFiles();                    $target = getcwd() . "/public/img/blog/blog.jpg";                    $filterR = new Rename(array(                        "target" => $target,                        "randomize" => true,                    ));                    $filename = $filterR->filter($files['picture-file']);                    chmod($filename["tmp_name"], 0644);                    $article->setArticleImage(str_replace(getcwd() . "/public", '', $filename["tmp_name"]));                } else {                    $article->setArticleImage(null);                }                $now = new \DateTime();                $article->setArticleCreatedDate($now)                        ->setArticleSlug((new Slugger())->uniqueSlugify($article->getArticleTitle()))                        ->setArticleUUID(Uuid::uuid4())                        ->setUsr($user)                        ->setCountry($country);                if ($publish) {                    $article->setArticlePublishedDate($now);                }                $this->entityManager->persist($article);                $this->entityManager->flush();                return $this->redirect()->toRoute('blog', array('action' => 'articles'));            }        }        $viewModel = new ViewModel();        //disable layout if request by Ajax        $viewModel->setTerminal($request->isXmlHttpRequest());        if (isset($_SESSION['mobile']) && $_SESSION['mobile']) {            $viewModel->setTemplate('dgi-module/blog/add-article.mobile.phtml');        }        $viewModel->setVariables([            'form'=>$form,            'user' => $user,            'action' => 'add'        ]);	    return $viewModel;	}    public function editArticleAction() {        $user = $this->identity();        if (!$user || $user->getUsrlId()!=$this->config['demodyne']['account']['type']['admin']) {            return $this->forward()->dispatch('DGIModule\Controller\Error', ['action' => 'access-denied']);        }        $articleUUID = $this->params('id');        // no parameter        if (! $articleUUID) {            return $this->forward()->dispatch('DGIModule\Controller\Error', ['action' => 'access-denied']);        }        /** @var \DGIModule\Entity\Article $article */        $article = $this->entityManager->getRepository('DGIModule\Entity\Article')->findOneBy(['articleUUID' => $articleUUID]);        if (! $article) {            return $this->forward()->dispatch('DGIModule\Controller\Error', ['action' => 'access-denied']);        }        $publish = $this->params()->fromRoute('publish', false);        $articleDescription = $this->params()->fromPost('articleDescription', $article->getArticleDescription());        $form = new AddEditArticleForm($this->config, $this->translator, $article);        $form->setAttribute('action', $this->url()->fromRoute('blog', ['action'=>'edit-article', 'id'=>$article->getArticleUUID()]));        $request = $this->getRequest();        if ($request->isPost()) {            $post = array_merge_recursive(                $request->getPost()->toArray(),                $request->getFiles()->toArray()            );            $form->bind($article);            $form->setData($post);            //verify if picture change            $picture = $post["picture-file"]["name"];            if ($form->isValid()) {                if ($picture != "") {                    $oldFilename = $article->getArticleImage();                    $files = $request->getFiles();                    $target = getcwd() . "/public/img/blog/blog.jpg";                    $filterR = new Rename(array(                        "target" => $target,                        "randomize" => true,                    ));                    $filename = $filterR->filter($files['picture-file']);                    chmod($filename["tmp_name"], 0644);                    $article->setArticleImage(str_replace(getcwd() . "/public", '', $filename["tmp_name"]));                    // remove old image                    if (file_exists(getcwd() . '/public'.$oldFilename) == true) {                        unlink(getcwd() . '/public'.$oldFilename);                    }                }                $now = new \DateTime();                if ($publish && !$article->getArticlePublishedDate()) {                    $article->setArticlePublishedDate($now);                }                $this->entityManager->merge($article);                $this->entityManager->flush();                return $this->redirect()->toRoute('blog', array('action' => 'article', 'id'=>$article->getArticleSlug()));            }        }        $viewModel = new ViewModel();        //disable layout if request by Ajax        $viewModel->setTerminal($request->isXmlHttpRequest());        if (isset($_SESSION['mobile']) && $_SESSION['mobile']) {            $viewModel->setTemplate('dgi-module/blog/add-article.mobile.phtml');        }        else {            $viewModel->setTemplate('dgi-module/blog/add-article.phtml');        }        $viewModel->setVariables([            'form'=>$form,            'user' => $user,            'article'=>$article,            'articleDescription'=>$articleDescription,            'action' => 'edit'        ]);        return $viewModel;    }	/**     * This is the published article list     *     * @return ViewModel     */    public function listAction() {	    $user = $this->identity();	    $countryCode = $this->params()->fromRoute('country', $user?$user->getCountry()->getCountryCode():'FR');        $session = new Container('blog');        $tag = $this->params()->fromRoute('tag', isset($session->tag)?$session->tag:'all');        $session->tag = $tag;        $countries = $this->entityManager->getRepository('DGIModule\Entity\Country')->getAllCountries();        $country = $this->entityManager->getRepository('DGIModule\Entity\Country')->getCountryByCode($countryCode);        $searchTerms = $this->params()->fromPost('searchTerms', null);	    $page = $this->params()->fromRoute('page', null);	    if (!$page) {	        if (!$session->listArticlesPage) {	            $page = 1;	        }	        else {	            $page = $session->listArticlesPage;	        }	    }	    if ($countryCode!=$session->listArticlesCountry) {	        $page = 1;        }	    $session->listArticlesPage = $page;        $session->listArticlesCountry = $countryCode;	    $limit= $this->params()->fromRoute('results', null);	    if (!$limit) {	        if (!$session->listArticlesResults) {	            $limit = 5;	        }	        else {	            $limit = $session->listArticlesResults;	        }	    }	    $session->listArticlesResults = $limit;	    $offset = ($page == 0) ? 0 : ($page - 1) * $limit;	    $pagedArticles = $this->entityManager->getRepository('DGIModule\Entity\Article')->getPagedArticles($country, $this->config['demodyne']['blog']['tag'][$tag], $offset, $limit, true);	    $viewModel = new ViewModel();	    $viewModel->setTerminal($this->getRequest()->isXmlHttpRequest());	    if (isset($_SESSION['mobile']) && $_SESSION['mobile']) {            $viewModel->setTemplate('dgi-module/blog/list.mobile.phtml');        }        $viewModel->setVariables([	        'pagedArticles' => $pagedArticles,	        'limit' => $limit,	        'page' => $page,	        'user' => $user,            'countries' => $countries,		    'selectedCountry' => $country,            'countryCode' =>$countryCode,            'searchTerms' => $searchTerms,            'tag' => $tag	    ]);	    return $viewModel;	}    /**     * This is the draft article list     *     * @return ViewModel     */    public function listDraftAction() {        $user = $this->identity();        $countryCode = $this->params()->fromRoute('country', $user?$user->getCountry()->getCountryCode():'FR');        $session = new Container('blog');        $tag = $this->params()->fromRoute('tag', isset($session->tag)?$session->tag:'all');        $session->tag = $tag;        $countries = $this->entityManager->getRepository('DGIModule\Entity\Country')->getAllCountries();        $country = $this->entityManager->getRepository('DGIModule\Entity\Country')->getCountryByCode($countryCode);        $searchTerms = $this->params()->fromPost('searchTerms', null);        $page = $this->params()->fromRoute('page', null);        if (!$page) {            if (!$session->listDraftsPage) {                $page = 1;            }            else {                $page = $session->listDraftsPage;            }        }        if ($countryCode!=$session->listDraftsCountry) {            $page = 1;        }        $session->listDraftsPage = $page;        $session->listDraftsCountry = $countryCode;        $limit= $this->params()->fromRoute('results', null);        if (!$limit) {            if (!$session->listDraftsResults) {                $limit = 5;            }            else {                $limit = $session->listDraftsResults;            }        }        $session->listDraftsResults = $limit;        $offset = ($page == 0) ? 0 : ($page - 1) * $limit;        $pagedArticles = $this->entityManager->getRepository('DGIModule\Entity\Article')->getPagedArticles($country, $this->config['demodyne']['blog']['tag'][$tag], $offset, $limit, false);        $viewModel = new ViewModel();        $viewModel->setTerminal($this->getRequest()->isXmlHttpRequest());        if (isset($_SESSION['mobile']) && $_SESSION['mobile']) {            $viewModel->setTemplate('dgi-module/blog/list-draft.mobile.phtml');        }        $viewModel->setVariables([            'pagedArticles' => $pagedArticles,            'limit' => $limit,            'page' => $page,            'user' => $user,            'countries' => $countries,            'selectedCountry' => $country,            'countryCode' =>$countryCode,            'searchTerms' => $searchTerms,            'tag' => $tag        ]);        return $viewModel;    }    /**     * Views an article     *     * @return mixed|ViewModel     */    public function articleAction()	{        unset($_SESSION['level']);        $user = $this->identity();        if ($user) {            $session = new Container('level');            $session->city = $user->getCity()->getCityId();        }	    $articleSlug = $this->params('id');	    // no parameter	    if (! $articleSlug) {            return $this->forward()->dispatch('DGIModule\Controller\Error', ['action' => 'access-denied']);        }        $article = $this->entityManager->getRepository('DGIModule\Entity\Article')->findOneBy(['articleSlug' => $articleSlug]);        if (! $article || (! $article->getArticlePublishedDate() && $user!=$article->getUsr())) {            return $this->forward()->dispatch('DGIModule\Controller\Error', ['action' => 'access-denied']);        }        if ($user!=$article->getUsr()) {            $article->setArticleViews($article->getArticleViews() + 1);            $this->entityManager->merge($article);            $this->entityManager->flush();        }        $viewModel = new ViewModel();        $commentsSection = $this->forward()->dispatch('DGIModule\Controller\Comment', array('action'=>'add-comment', 'type' =>'article',  'id' => $article->getArticleUUID(), 'ajax' => false));        $viewModel->addChild($commentsSection, 'commentsSection');        if (isset($_SESSION['mobile']) && $_SESSION['mobile']) {            $viewModel->setTemplate('dgi-module/blog/article.mobile.phtml');        }        $viewModel->setVariables([            'article' => $article,            'user' => $user,            'view' => true        ]);        return $viewModel;	}}