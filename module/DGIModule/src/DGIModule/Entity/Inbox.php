<?php/** * @link      https://github.com/demodyne/demodyne * @copyright Copyright (c) 2015-2016 Demodyne (https://www.demodyne.org) * @license   http://www.gnu.org/licenses/agpl.html GNU Affero General Public License */namespace DGIModule\Entity;use Doctrine\ORM\Mapping as ORM;/** * Inbox * * @ORM\Table(name="dgi_inbox",  *              indexes={@ORM\Index(name="from_usr_id_idx", columns={"from_usr_id"}),  *                       @ORM\Index(name="to_usr_id_idx", columns={"to_usr_id"}),  *                       @ORM\Index(name="scn_jd_idx", columns={"scn_id"}),  *                       @ORM\Index(name="com_id_idx", columns={"com_id"}),  *                       @ORM\Index(name="ibx_prop_id_idx", columns={"prop_id"}) *              }) * @ORM\Entity(repositoryClass="DGIModule\Entity\Repository\InboxRepository") */class Inbox{    /**     * @var integer     *     * @ORM\Column(name="ibx_id", type="integer", nullable=false)     * @ORM\Id     * @ORM\GeneratedValue(strategy="IDENTITY")     */    private $ibxId;    /**     * @var integer     *     * @ORM\Column(name="ibx_type", type="integer", nullable=false)     */    private $ibxType;    /**     * @var string     *     * @ORM\Column(name="ibx_text", type="string", length=10000, nullable=true)     */    private $ibxText;    /**     * @var string     *     * @ORM\Column(name="ibx_title", type="string", length=50, nullable=true)     */    private $ibxTitle;    /**     * @var \DateTime     *     * @ORM\Column(name="ibx_created_date", type="datetime", nullable=true)     */    private $ibxCreatedDate;    /**     * @var integer     *     * @ORM\Column(name="ibx_viewed", type="integer", nullable=true)     */    private $ibxViewed = '0';    /**     * @var string     *     * @ORM\Column(name="ibx_uuid", type="string", length=36, nullable=true)     */    private $ibxUUID;    /**     * @var string     *     * @ORM\Column(name="ibx_group", type="string", length=23, nullable=true)     */    private $ibxGroup;    /**     * @var \DateTime     *     * @ORM\Column(name="ibx_from_trash_date", type="datetime", nullable=true)     */    private $ibxFromTrashDate;    /**     * @var \DateTime     *     * @ORM\Column(name="ibx_from_deleted_date", type="datetime", nullable=true)     */    private $ibxFromDeletedDate;    /**     * @var \DateTime     *     * @ORM\Column(name="ibx_to_trash_date", type="datetime", nullable=true)     */    private $ibxToTrashDate;    /**     * @var \DateTime     *     * @ORM\Column(name="ibx_to_deleted_date", type="datetime", nullable=true)     */    private $ibxToDeletedDate;    /**     * @var \DGIModule\Entity\Proposal     *     * @ORM\ManyToOne(targetEntity="DGIModule\Entity\Proposal")     * @ORM\JoinColumns({     *   @ORM\JoinColumn(name="prop_id", referencedColumnName="prop_id")     * })     */    private $prop;    /**     * @var \DGIModule\Entity\Comment     *     * @ORM\ManyToOne(targetEntity="DGIModule\Entity\Comment")     * @ORM\JoinColumns({     *   @ORM\JoinColumn(name="com_id", referencedColumnName="com_id")     * })     */    private $com;    /**     * @var \DGIModule\Entity\User     *     * @ORM\ManyToOne(targetEntity="DGIModule\Entity\User")     * @ORM\JoinColumns({     *   @ORM\JoinColumn(name="from_usr_id", referencedColumnName="usr_id")     * })     */    private $fromUsr;    /**     * @var \DGIModule\Entity\Program     *     * @ORM\ManyToOne(targetEntity="DGIModule\Entity\Program")     * @ORM\JoinColumns({     *   @ORM\JoinColumn(name="prog_id", referencedColumnName="prog_id")     * })     */    private $prog;    /**     * @var \DGIModule\Entity\User     *     * @ORM\ManyToOne(targetEntity="DGIModule\Entity\User")     * @ORM\JoinColumns({     *   @ORM\JoinColumn(name="to_usr_id", referencedColumnName="usr_id")     * })     */    private $toUsr;    /**     * @var \DGIModule\Entity\Newsletter     *     * @ORM\ManyToOne(targetEntity="DGIModule\Entity\Newsletter")     * @ORM\JoinColumns({     *   @ORM\JoinColumn(name="nl_id", referencedColumnName="nl_id")     * })     */    private $nl;    /**     * Get ibxId     *     * @return integer      */    public function getIbxId()    {        return $this->ibxId;    }    /**     * Set ibxType     *     * @param integer $ibxType     * @return Inbox     */    public function setIbxType($ibxType)    {        $this->ibxType = $ibxType;        return $this;    }    /**     * Get ibxType     *     * @return integer      */    public function getIbxType()    {        return $this->ibxType;    }    /**     * Set ibxTitle     *     * @param string $ibxTitle     * @return Inbox     */    public function setIbxTitle($ibxTitle)    {        $this->ibxTitle = $ibxTitle;        return $this;    }    /**     * Get ibxTitle     *     * @return string     */    public function getIbxTitle()    {        return $this->ibxTitle;    }    /**     * Set ibxText     *     * @param string $ibxText     * @return Inbox     */    public function setIbxText($ibxText)    {        $this->ibxText = $ibxText;        return $this;    }    /**     * Get ibxText     *     * @return string      */    public function getIbxText()    {        return $this->ibxText;    }    /**     * Set ibxCreatedDate     *     * @param \DateTime $ibxCreatedDate     * @return Inbox     */    public function setIbxCreatedDate($ibxCreatedDate)    {        $this->ibxCreatedDate = $ibxCreatedDate;        return $this;    }    /**     * Get ibxCreatedDate     *     * @return \DateTime      */    public function getIbxCreatedDate()    {        return $this->ibxCreatedDate;    }    /**     * Set ibxViewed     *     * @param integer $ibxViewed     * @return Inbox     */    public function setIbxViewed($ibxViewed)    {        $this->ibxViewed = $ibxViewed;        return $this;    }    /**     * Get ibxViewed     *     * @return integer      */    public function getIbxViewed()    {        return $this->ibxViewed;    }    /**     * Get ibxUUID     *     * @return string      */    public function getIbxUUID()    {        return $this->ibxUUID;    }    /**     * Set ibxGroup     *     * @param string $ibxUUID     * @return Inbox     */    public function setIbxGroup($ibxGroup)    {        $this->ibxGroup= $ibxGroup;        return $this;    }    /**     * Get ibxGroup     *     * @return string     */    public function getIbxGroup()    {        return $this->ibxGroup;    }    /**     * Set ibxFromTrashDate     *     * @param \DateTime $ibxFromTrashDate     *     * @return Inbox     */    public function setIbxFromTrashDate($ibxFromTrashDate)    {        $this->ibxFromTrashDate = $ibxFromTrashDate;        return $this;    }    /**     * Get ibxFromTrashDate     *     * @return \DateTime     */    public function getIbxFromTrashDate()    {        return $this->ibxFromTrashDate;    }    /**     * Set ibxFromDeletedDate     *     * @param \DateTime $ibxFromDeletedDate     *     * @return Inbox     */    public function setIbxFromDeletedDate($ibxFromDeletedDate)    {        $this->ibxFromDeletedDate = $ibxFromDeletedDate;        return $this;    }    /**     * Get ibxFromDeletedDate     *     * @return \DateTime     */    public function getIbxFromDeletedDate()    {        return $this->ibxFromDeletedDate;    }    /**     * Set ibxToTrashDate     *     * @param \DateTime $ibxToTrashDate     *     * @return Inbox     */    public function setIbxToTrashDate($ibxToTrashDate)    {        $this->ibxToTrashDate = $ibxToTrashDate;        return $this;    }    /**     * Get ibxToTrashDate     *     * @return \DateTime     */    public function getIbxToTrashDate()    {        return $this->ibxToTrashDate;    }    /**     * Set ibxToDeletedDate     *     * @param \DateTime $ibxToDeletedDate     *     * @return Inbox     */    public function setIbxToDeletedDate($ibxToDeletedDate)    {        $this->ibxToDeletedDate = $ibxToDeletedDate;        return $this;    }    /**     * Get ibxToDeletedDate     *     * @return \DateTime     */    public function getIbxToDeletedDate()    {        return $this->ibxToDeletedDate;    }    /**     * Set prop     *     * @param \DGIModule\Entity\Proposal $prop     * @return Inbox     */    public function setProp(\DGIModule\Entity\Proposal $prop = null)    {        $this->prop = $prop;        return $this;    }    /**     * Get prop     *     * @return \DGIModule\Entity\Proposal      */    public function getProp()    {        return $this->prop;    }    /**     * Set com     *     * @param \DGIModule\Entity\Comment $com     * @return Inbox     */    public function setCom(\DGIModule\Entity\Comment $com = null)    {        $this->com = $com;        return $this;    }    /**     * Get com     *     * @return \DGIModule\Entity\Comment      */    public function getCom()    {        return $this->com;    }    /**     * Set fromUsr     *     * @param \DGIModule\Entity\User $fromUsr     * @return Inbox     */    public function setFromUsr(\DGIModule\Entity\User $fromUsr = null)    {        $this->fromUsr = $fromUsr;        return $this;    }    /**     * Get fromUsr     *     * @return \DGIModule\Entity\User      */    public function getFromUsr()    {        return $this->fromUsr;    }    /**     * Set scn     *     * @param \DGIModule\Entity\Program $scn     * @return Inbox     */    public function setProg(\DGIModule\Entity\Program $prog = null)    {        $this->prog = $prog;        return $this;    }    /**     * Get scn     *     * @return \DGIModule\Entity\Program      */    public function getProg()    {        return $this->prog;    }    /**     * Set toUsr     *     * @param \DGIModule\Entity\User $toUsr     * @return Inbox     */    public function setToUsr(\DGIModule\Entity\User $toUsr = null)    {        $this->toUsr = $toUsr;        return $this;    }    /**     * Get toUsr     *     * @return \DGIModule\Entity\User      */    public function getToUsr()    {        return $this->toUsr;    }    /**     * Set nl     *     * @param \DGIModule\Entity\Newsletter $nl     *     * @return Inbox     */    public function setNewsletter(\DGIModule\Entity\Newsletter $nl = null)    {        $this->nl = $nl;        return $this;    }    /**     * Get nl     *     * @return \DGIModule\Entity\Newsletter     */    public function getNewsletter()    {        return $this->nl;    }}